{***********************************************
Sea Saw
Author: Native Instruments
Written by: Nicki Marinic & Alberto AlcÃ¡zar
Modified: Aug 4, 2025
*************************************************}

on init
	message("")
	
{**}
	set_script_title("See Saw")
	make_perfview
	set_ui_height_px(220)
	set_ui_width_px(633)

	{*Distortion*}
	set_engine_par($ENGINE_PAR_EFFECT_TYPE, $EFFECT_TYPE_DISTORTION, -1, 0, 1)
 	declare ui_knob $distortion_knob(0,1000000,1)
	set_text ($distortion_knob,"Distortion")
	set_knob_defval($distortion_knob,500000)
	$distortion_knob := 500000
	set_control_help ($distortion_knob,"Distortion: Sets the amount of distortion.")
	move_control($distortion_knob,1,2)
    set_engine_par($ENGINE_PAR_DRIVE, $distortion_knob, -1, 0, 1)
	set_knob_label($distortion_knob, get_engine_par_disp($ENGINE_PAR_DRIVE, -1, 0, 1))

	{*Reverb*}
	set_engine_par($ENGINE_PAR_EFFECT_TYPE, $EFFECT_TYPE_REVERB, -1, 1, 1)
 	declare ui_knob $reverb_knob(0,1000000,10000)
 	set_knob_unit($reverb_knob, $KNOB_UNIT_DB)
	set_text ($reverb_knob,"Reverb")
	set_knob_defval($reverb_knob,500000)
	$reverb_knob := 500000
	set_control_help ($reverb_knob,"Reverb: Sets the amount of reverb")
	move_control($reverb_knob,2,2)
	set_knob_defval($reverb_knob,0)
    set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN, $reverb_knob, -1, 1, 1)
	set_knob_label($reverb_knob, get_engine_par_disp($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN, -1, 1, 1))

	{*Phaser Depth*}
	set_engine_par($ENGINE_PAR_EFFECT_TYPE, $EFFECT_TYPE_PHASER, -1, 2, 1)
 	declare ui_knob $phaser_knob(0,1000000,1)
	set_text ($phaser_knob,"Depth")
	set_knob_defval($phaser_knob,500000)
	$phaser_knob := 500000
	set_control_help ($phaser_knob,"Depth: Sets the amount of phaser depth")
	move_control($phaser_knob,1,4)
    set_engine_par($ENGINE_PAR_PH_DEPTH, $phaser_knob, -1, 2, 1)
	set_knob_label($phaser_knob, get_engine_par_disp($ENGINE_PAR_PH_DEPTH, -1, 2, 1))

	{*Phaser Speed*}
 	declare ui_knob $phaser_knob_speed(0,1000000,1)
	set_knob_unit($phaser_knob_speed, $KNOB_UNIT_HZ)
	set_text ($phaser_knob_speed,"Speed")
	set_knob_defval($phaser_knob_speed,500000)
	$phaser_knob_speed := 500000
	set_control_help ($phaser_knob_speed,"Speed: Sets the amount of phaser speed")
	move_control($phaser_knob_speed,2,4)
    set_engine_par($ENGINE_PAR_PH_SPEED, $phaser_knob_speed, -1, 2, 1)
	set_knob_label($phaser_knob_speed, get_engine_par_disp($ENGINE_PAR_PH_SPEED, -1, 2, 1))

	{*Phaser Phase*}
 	declare ui_knob $phaser_knob_phase(0,1000000,1)
	set_text ($phaser_knob_phase,"Phase")
	set_knob_defval($phaser_knob_phase,500000)
	$phaser_knob_phase := 500000
	set_control_help ($phaser_knob_phase,"Phase: Sets the amount of phaser phase")
	move_control($phaser_knob_phase,3,4)
    set_engine_par($ENGINE_PAR_PH_PHASE, $phaser_knob_phase, -1, 2, 1)
	set_knob_label($phaser_knob_phase, get_engine_par_disp($ENGINE_PAR_PH_PHASE, -1, 2, 1))
	
	{*Phaser Feedback*}
 	declare ui_knob $phaser_knob_feedback(0,1000000,1)
	set_knob_unit($phaser_knob_feedback, $KNOB_UNIT_PERCENT)
	set_text ($phaser_knob_feedback,"Feedback")
	set_knob_defval($phaser_knob_feedback,500000)
	$phaser_knob_feedback := 500000
	set_control_help ($phaser_knob_feedback,"Feedback: Sets the amount of phaser feedback")
	move_control($phaser_knob_feedback,4,4)
    set_engine_par($ENGINE_PAR_PH_FEEDBACK, $phaser_knob_feedback, -1, 2, 1)
	set_knob_label($phaser_knob_feedback, get_engine_par_disp($ENGINE_PAR_PH_FEEDBACK, -1, 2, 1))

	{*LP Filter*}
	set_engine_par($ENGINE_PAR_EFFECT_TYPE, $EFFECT_TYPE_SOLID_GEQ, -1, 3, 1)

	declare ui_switch $LP_filter
	set_text ($LP_filter,"LP Filter")
	make_persistent($LP_filter)
	set_control_help ($LP_filter,"LP Filter: Activates the low-pass filter")
	move_control($LP_filter,5,4)
	set_engine_par($ENGINE_PAR_SEQ_LF_GAIN , 500000,-1, 3, 1)

	{*HP Filter*}
	declare ui_switch $HP_filter
	set_text ($HP_filter,"HP Filter")
	make_persistent($HP_filter)
	set_control_help ($HP_filter,"HP Filter: Activates the high-pass filter")
	move_control($HP_filter,5,5)
	set_engine_par($ENGINE_PAR_SEQ_HF_GAIN , 500000,-1, 3, 1)

	{*Key-Switches*}
	set_key_color(24, $KEY_COLOR_RED)
	set_key_color(26, $KEY_COLOR_RED)
	set_key_color(28, $KEY_COLOR_RED)
	set_key_color(29, $KEY_COLOR_RED)

{**}

	declare !interval_names[14]
	!interval_names[0] := "Unison"
	!interval_names[1] := "mi 2nd"
	!interval_names[2] := "2nd"
	!interval_names[3] := "mi 3rd"
	!interval_names[4] := "3rd"
	!interval_names[5] := "4th"
	!interval_names[6] := "+ 4th"
	!interval_names[7] := "5th"
	!interval_names[8] := "mi 6th"
	!interval_names[9] := "6th"
	!interval_names[10] := "mi 7th"
	!interval_names[11] := "7th"
	!interval_names[12] := "8ve"
	
	declare $new_note
	declare $new_velocity
	declare $new_id
	
 	declare ui_knob $interval_knob(-12,12,1)
	set_text ($interval_knob,"Interval")
	set_knob_defval($interval_knob,0)
	$interval_knob := 12
	set_knob_label($interval_knob,!Interval_names[abs($interval_knob)])			
	make_persistent($interval_knob)
	set_control_help ($interval_knob,"Interval: Sets the interval of the second note.")
	
	declare ui_knob $octave_knob(-10,10,1)
	set_text ($octave_knob,"Octave")
	set_knob_unit($octave_knob,$KNOB_UNIT_OCT)
	set_knob_defval($octave_knob,0)
	$octave_knob := 1
	make_persistent($octave_knob)
	set_control_help ($octave_knob,"Octave: Sets the octave offset of the second note.")
	
	declare ui_knob $velocity_knob(1,200,1)
	set_text ($velocity_knob,"Velocity")
	set_knob_unit($velocity_knob,$KNOB_UNIT_PERCENT)
	set_knob_defval($velocity_knob,100)
	$velocity_knob := 100
	make_persistent($velocity_knob)
	set_control_help ($velocity_knob,"Velocity: Sets the velocity of the second note as a percentage of the played velocity.")

	move_control($interval_knob,3,2)
	move_control($octave_knob,4,2)
	move_control($velocity_knob,5,2)
	
	_read_persistent_var($interval_knob)
	set_knob_label($interval_knob,!Interval_names[abs($interval_knob)])

end on

on note
{**}
	if($EVENT_NOTE > 35)
{**}
		$new_note:= $EVENT_NOTE + $interval_knob+($octave_knob*12)
		
		if ($new_note < 0)
			$new_note := 0
		end if
		if ($new_note > 127)
			$new_note := 127
		end if
		
		$new_velocity := ($EVENT_VELOCITY*$velocity_knob)/100
					
		if ($new_velocity < 1)
			$new_velocity := 1
		end if
		if ($new_velocity > 127)
			$new_velocity := 127
		end if
		
		$new_id := play_note($new_note,$new_velocity,0,-1)
		change_vol($new_id,get_event_par($EVENT_ID,$EVENT_PAR_VOLUME),1)
		change_tune($new_id,get_event_par($EVENT_ID,$EVENT_PAR_TUNE),1)
		change_pan($new_id,get_event_par($EVENT_ID,$EVENT_PAR_PAN),1)
{**}	
	end if
		if($EVENT_NOTE = 24)
			$LP_filter := 1
			set_engine_par($ENGINE_PAR_SEQ_LF_GAIN , -20,-1, 3, 1)
		end if
		if($EVENT_NOTE = 26)
			$LP_filter := 0
			set_engine_par($ENGINE_PAR_SEQ_LF_GAIN , 500000,-1, 3, 1)
		end if
		if($EVENT_NOTE = 28)
			$HP_filter := 1
			set_engine_par($ENGINE_PAR_SEQ_HF_GAIN , -20,-1, 3, 1)
		end if
		if($EVENT_NOTE = 29)
			$HP_filter := 0
			set_engine_par($ENGINE_PAR_SEQ_HF_GAIN , 500000,-1, 3, 1)	
		end if
{**}
end on

on ui_control ($interval_knob)
	set_knob_label($interval_knob,!Interval_names[abs($interval_knob)])
end on

{**}
on ui_control ($distortion_knob)
    set_engine_par($ENGINE_PAR_DRIVE, $distortion_knob, -1, 0, 1)
	set_knob_label($distortion_knob, get_engine_par_disp($ENGINE_PAR_DRIVE, -1, 0, 1))
end on

on ui_control ($reverb_knob)
    set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN, $reverb_knob, -1, 1, 1)
	set_knob_label($reverb_knob, get_engine_par_disp($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN, -1, 1, 1))
end on

on ui_control ($phaser_knob)
    set_engine_par($ENGINE_PAR_PH_DEPTH, $phaser_knob, -1, 2, 1)
	set_knob_label($phaser_knob, get_engine_par_disp($ENGINE_PAR_PH_DEPTH, -1, 2, 1))
end on

on ui_control ($phaser_knob_speed)
    set_engine_par($ENGINE_PAR_PH_SPEED, $phaser_knob_speed, -1, 2, 1)
	set_knob_label($phaser_knob_speed, get_engine_par_disp($ENGINE_PAR_PH_SPEED, -1, 2, 1))
end on

on ui_control ($phaser_knob_phase)
    set_engine_par($ENGINE_PAR_PH_PHASE, $phaser_knob_phase, -1, 2, 1)
	set_knob_label($phaser_knob_phase, get_engine_par_disp($ENGINE_PAR_PH_PHASE, -1, 2, 1))
end on

on ui_control ($LP_filter)
	if ($LP_filter > 0)
		set_engine_par($ENGINE_PAR_SEQ_LF_GAIN , -20,-1, 3, 1)
    else
		set_engine_par($ENGINE_PAR_SEQ_LF_GAIN , 500000,-1, 3, 1)
    end if
end on

on ui_control ($HP_filter)
	if ($HP_filter > 0)
		set_engine_par($ENGINE_PAR_SEQ_HF_GAIN , -20,-1, 3, 1)
    else
		set_engine_par($ENGINE_PAR_SEQ_HF_GAIN , 500000,-1, 3, 1)
    end if
end on
{**}